{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nconst ERROR_MESSAGE = 'Get Storage Item Failed';\nexport function useStorage(storageName, key, defaultValue) {\n  const {\n    0: storage,\n    1: setStorage\n  } = useState(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState(defaultValue);\n  useEffect(() => {\n    setStorage(window[storageName]);\n  }, []);\n\n  const setData = keyValue => {\n    if (!storage) return;\n\n    try {\n      storage.setItem(key, JSON.stringify(keyValue));\n      setValue(key, keyValue);\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  };\n\n  useEffect(() => {\n    if (!storage) return;\n    console.log(storage);\n\n    try {\n      const stringfiedValue = storage.getItem(key);\n\n      if (stringfiedValue !== null) {\n        setValue(JSON.parse(stringfiedValue));\n      } else {\n        setData(defaultValue);\n      }\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  }, [storage]);\n  return [value, setValue];\n}","map":{"version":3,"sources":["/Users/jengyoung/repos/DDU_DU_DDU_DU/next/10/antd/4/src/hooks/useStorage.js"],"names":["React","useEffect","useState","ERROR_MESSAGE","useStorage","storageName","key","defaultValue","storage","setStorage","value","setValue","window","setData","keyValue","setItem","JSON","stringify","e","console","error","log","stringfiedValue","getItem","parse"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,aAAa,GAAG,yBAAtB;AAEA,OAAO,SAASC,UAAT,CAAoBC,WAApB,EAAiCC,GAAjC,EAAsCC,YAAtC,EAAoD;AACzD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAACK,YAAD,CAAlC;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAACG,MAAM,CAACP,WAAD,CAAP,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,OAAO,GAAIC,QAAD,IAAc;AAC5B,QAAI,CAACN,OAAL,EAAc;;AAEd,QAAI;AACFA,MAAAA,OAAO,CAACO,OAAR,CAAgBT,GAAhB,EAAqBU,IAAI,CAACC,SAAL,CAAeH,QAAf,CAArB;AACAH,MAAAA,QAAQ,CAACL,GAAD,EAAMQ,QAAN,CAAR;AACD,KAHD,CAGE,OAAOI,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcjB,aAAd;AACD;AACF,GATD;;AAWAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,OAAL,EAAc;AAEdW,IAAAA,OAAO,CAACE,GAAR,CAAYb,OAAZ;;AAEA,QAAI;AACF,YAAMc,eAAe,GAAGd,OAAO,CAACe,OAAR,CAAgBjB,GAAhB,CAAxB;;AAEA,UAAIgB,eAAe,KAAK,IAAxB,EAA8B;AAC5BX,QAAAA,QAAQ,CAACK,IAAI,CAACQ,KAAL,CAAWF,eAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLT,QAAAA,OAAO,CAACN,YAAD,CAAP;AACD;AACF,KARD,CAQE,OAAOW,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcjB,aAAd;AACD;AACF,GAhBQ,EAgBN,CAACK,OAAD,CAhBM,CAAT;AAkBA,SAAO,CAACE,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst ERROR_MESSAGE = 'Get Storage Item Failed';\n\nexport function useStorage(storageName, key, defaultValue) {\n  const [storage, setStorage] = useState(null);\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setStorage(window[storageName]);\n  }, []);\n\n  const setData = (keyValue) => {\n    if (!storage) return;\n\n    try {\n      storage.setItem(key, JSON.stringify(keyValue));\n      setValue(key, keyValue);\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  };\n\n  useEffect(() => {\n    if (!storage) return;\n\n    console.log(storage);\n\n    try {\n      const stringfiedValue = storage.getItem(key);\n\n      if (stringfiedValue !== null) {\n        setValue(JSON.parse(stringfiedValue));\n      } else {\n        setData(defaultValue);\n      }\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  }, [storage]);\n\n  return [value, setValue];\n}\n"]},"metadata":{},"sourceType":"module"}