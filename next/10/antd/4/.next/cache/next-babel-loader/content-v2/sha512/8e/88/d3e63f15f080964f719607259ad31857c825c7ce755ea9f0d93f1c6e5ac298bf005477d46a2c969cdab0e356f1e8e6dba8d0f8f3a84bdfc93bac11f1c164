{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jengyoung/repos/DDU_DU_DDU_DU/next/10/antd/4/src/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nimport { DefaultInput, DefaultDatePicker, InputForm, DefaultCard, DefaultModal } from \"../components\";\nimport { dateFormat, getDate } from \"../utils\";\nimport { createPortal } from 'react-dom';\nimport { DefaultList } from \"../components\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nconst data = [{\n  title: '투두리스트 만들기',\n  description: '투두리스트 만드는 중입니다.',\n  createdAt: '2023-05-14',\n  completed: false,\n  avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png'\n}, {\n  title: '투두리스트 만들기',\n  description: '투두리스트 만드는 중입니다.',\n  createdAt: '2023-05-14',\n  completed: false,\n  avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png'\n}, {\n  title: '투두리스트 만들기',\n  description: '투두리스트 만드는 중입니다.',\n  createdAt: '2023-05-14',\n  completed: false,\n  avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png'\n}, {\n  title: '투두리스트 만들기',\n  description: '투두리스트 만드는 중입니다.',\n  createdAt: '2023-05-14',\n  completed: false,\n  avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png'\n}];\nexport default function IndexPage() {\n  const {\n    0: todoDate,\n    1: setTodoDate\n  } = useState(getDate(new Date(), dateFormat.default));\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState({\n    title: '',\n    description: ''\n  });\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(true);\n\n  const onChangeDatePicker = date => {\n    setTodoDate(getDate(date !== null && date !== void 0 ? date : new Date(), dateFormat.default));\n  };\n\n  const onChangeInput = (e, key) => {\n    setInputs(state => _objectSpread(_objectSpread({}, state), {}, {\n      [key]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    setTodos({\n      title: e.target.value,\n      description: '',\n      createdAt: getDate(new Date(), dateFormat.default),\n      completed: false,\n      avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png'\n    });\n    setInputValue('');\n  };\n\n  const {\n    0: body,\n    1: setBody\n  } = useState(null);\n  useEffect(() => {\n    setBody(() => document.querySelector('#__next'));\n  }, []);\n  return body ? /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DefaultDatePicker, {\n        onChange: onChangeDatePicker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n        Input: /*#__PURE__*/_jsxDEV(DefaultInput, {\n          value: inputs.title,\n          onChange: e => onChangeInput('title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 20\n        }, this),\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DefaultList, {\n        data: todos,\n        render: item => /*#__PURE__*/_jsxDEV(DefaultList.Item, {\n          children: /*#__PURE__*/_jsxDEV(DefaultCard, {\n            loading: false,\n            title: item.title,\n            description: item.description,\n            avatarUrl: item.avatarUrl,\n            date: getDate(item.createdAt, dateFormat.default)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisible(true),\n        children: \"\\uC5F4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DefaultModal, {\n      open: visible,\n      onClose: () => setVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true), body) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/jengyoung/repos/DDU_DU_DDU_DU/next/10/antd/4/src/pages/index.js"],"names":["useEffect","useState","DefaultInput","DefaultDatePicker","InputForm","DefaultCard","DefaultModal","dateFormat","getDate","createPortal","DefaultList","useLocalStorage","data","title","description","createdAt","completed","avatarUrl","IndexPage","todoDate","setTodoDate","Date","default","inputs","setInputs","todos","setTodos","visible","setVisible","onChangeDatePicker","date","onChangeInput","e","key","state","target","value","onSubmit","setInputValue","body","setBody","document","querySelector","item"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { DefaultInput, DefaultDatePicker, InputForm, DefaultCard, DefaultModal } from '#components';\nimport { dateFormat, getDate } from '#utils';\nimport { createPortal } from 'react-dom';\nimport { DefaultList } from '../components';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nconst data = [\n  {\n    title: '투두리스트 만들기',\n    description: '투두리스트 만드는 중입니다.',\n    createdAt: '2023-05-14',\n    completed: false,\n    avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png',\n  },\n  {\n    title: '투두리스트 만들기',\n    description: '투두리스트 만드는 중입니다.',\n    createdAt: '2023-05-14',\n    completed: false,\n    avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png',\n  },\n  {\n    title: '투두리스트 만들기',\n    description: '투두리스트 만드는 중입니다.',\n    createdAt: '2023-05-14',\n    completed: false,\n    avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png',\n  },\n  {\n    title: '투두리스트 만들기',\n    description: '투두리스트 만드는 중입니다.',\n    createdAt: '2023-05-14',\n    completed: false,\n    avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png',\n  },\n];\n\nexport default function IndexPage() {\n  const [todoDate, setTodoDate] = useState(getDate(new Date(), dateFormat.default));\n  const [inputs, setInputs] = useState({\n    title: '',\n    description: '',\n  });\n\n  const [todos, setTodos] = useLocalStorage('todos', []);\n\n  const [visible, setVisible] = useState(true);\n\n  const onChangeDatePicker = (date) => {\n    setTodoDate(getDate(date ?? new Date(), dateFormat.default));\n  };\n\n  const onChangeInput = (e, key) => {\n    setInputs((state) => ({\n      ...state,\n      [key]: e.target.value,\n    }));\n  };\n\n  const onSubmit = (e) => {\n    setTodos({\n      title: e.target.value,\n      description: '',\n      createdAt: getDate(new Date(), dateFormat.default),\n      completed: false,\n      avatarUrl: 'https://w7.pngwing.com/pngs/441/722/png-transparent-pikachu-thumbnail.png',\n    });\n\n    setInputValue('');\n  };\n\n  const [body, setBody] = useState(null);\n\n  useEffect(() => {\n    setBody(() => document.querySelector('#__next'));\n  }, []);\n\n  return body ? (\n    createPortal(\n      <>\n        <div>\n          <DefaultDatePicker onChange={onChangeDatePicker} />\n          <InputForm\n            Input={<DefaultInput value={inputs.title} onChange={(e) => onChangeInput('title')} />}\n            onSubmit={onSubmit}\n          />\n\n          <DefaultList\n            data={todos}\n            render={(item) => (\n              <DefaultList.Item>\n                <DefaultCard\n                  loading={false}\n                  title={item.title}\n                  description={item.description}\n                  avatarUrl={item.avatarUrl}\n                  date={getDate(item.createdAt, dateFormat.default)}\n                />\n              </DefaultList.Item>\n            )}\n          />\n\n          <button onClick={() => setVisible(true)}>열기</button>\n        </div>\n        <DefaultModal open={visible} onClose={() => setVisible(false)} />\n      </>,\n      body\n    )\n  ) : (\n    <div></div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}