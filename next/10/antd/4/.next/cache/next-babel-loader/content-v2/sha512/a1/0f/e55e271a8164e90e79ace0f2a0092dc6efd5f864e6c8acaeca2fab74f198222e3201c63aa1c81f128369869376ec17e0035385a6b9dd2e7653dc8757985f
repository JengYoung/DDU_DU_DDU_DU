{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nconst ERROR_MESSAGE = 'Get Storage Item Failed';\nexport function useLocalStorage(key, defaultValue) {\n  const {\n    0: storage,\n    1: setStorage\n  } = useState(null);\n  const {\n    0: value,\n    1: setValue\n  } = useState(null);\n  useEffect(() => {\n    setStorage(window.localStorage);\n  }, []);\n\n  const setData = keyValue => {\n    if (!storage) return;\n\n    try {\n      storage.setItem(key, JSON.stringify(keyValue));\n      setValue(key, keyValue);\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  };\n\n  useEffect(() => {\n    if (!storage) return;\n    console.log(storage);\n\n    try {\n      const stringfiedValue = storage.getItem(key);\n      console.log('stringfiedValue: ', stringfiedValue);\n\n      if (stringfiedValue !== null) {\n        setValue(JSON.parse(stringfiedValue));\n      } else {\n        setData(key, defaultValue);\n      }\n    } catch (e) {\n      console.error(ERROR_MESSAGE);\n    }\n  }, [storage]);\n  return [value, setValue];\n}","map":{"version":3,"sources":["/Users/jengyoung/repos/DDU_DU_DDU_DU/next/10/antd/4/src/hooks/useStorage.js"],"names":["React","useEffect","useState","ERROR_MESSAGE","useLocalStorage","key","defaultValue","storage","setStorage","value","setValue","window","localStorage","setData","keyValue","setItem","JSON","stringify","e","console","error","log","stringfiedValue","getItem","parse"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,aAAa,GAAG,yBAAtB;AAEA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AACjD,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAACG,MAAM,CAACC,YAAR,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,OAAO,GAAIC,QAAD,IAAc;AAC5B,QAAI,CAACP,OAAL,EAAc;;AAEd,QAAI;AACFA,MAAAA,OAAO,CAACQ,OAAR,CAAgBV,GAAhB,EAAqBW,IAAI,CAACC,SAAL,CAAeH,QAAf,CAArB;AACAJ,MAAAA,QAAQ,CAACL,GAAD,EAAMS,QAAN,CAAR;AACD,KAHD,CAGE,OAAMI,CAAN,EAAS;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcjB,aAAd;AACD;AACF,GATD;;AAWAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,OAAL,EAAc;AAEdY,IAAAA,OAAO,CAACE,GAAR,CAAYd,OAAZ;;AAEA,QAAI;AACF,YAAMe,eAAe,GAAGf,OAAO,CAACgB,OAAR,CAAgBlB,GAAhB,CAAxB;AACAc,MAAAA,OAAO,CAACE,GAAR,CAAY,mBAAZ,EAAiCC,eAAjC;;AACA,UAAIA,eAAe,KAAK,IAAxB,EAA8B;AAC5BZ,QAAAA,QAAQ,CAACM,IAAI,CAACQ,KAAL,CAAWF,eAAX,CAAD,CAAR;AACD,OAFD,MAEO;AACLT,QAAAA,OAAO,CAACR,GAAD,EAAMC,YAAN,CAAP;AACD;AACF,KARD,CAQE,OAAMY,CAAN,EAAS;AACTC,MAAAA,OAAO,CAACC,KAAR,CAAcjB,aAAd;AACD;AACF,GAhBQ,EAgBN,CAACI,OAAD,CAhBM,CAAT;AAkBA,SAAO,CAACE,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nconst ERROR_MESSAGE = 'Get Storage Item Failed'\n\nexport function useLocalStorage(key, defaultValue) {\n  const [storage, setStorage] = useState(null);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    setStorage(window.localStorage);\n  }, [])\n\n  const setData = (keyValue) => {\n    if (!storage) return;\n\n    try {\n      storage.setItem(key, JSON.stringify(keyValue));\n      setValue(key, keyValue);\n    } catch(e) {\n      console.error(ERROR_MESSAGE)\n    }\n  }\n\n  useEffect(() => {\n    if (!storage) return;\n\n    console.log(storage)\n\n    try {\n      const stringfiedValue = storage.getItem(key);\n      console.log('stringfiedValue: ', stringfiedValue)\n      if (stringfiedValue !== null) {\n        setValue(JSON.parse(stringfiedValue));\n      } else {\n        setData(key, defaultValue);\n      }\n    } catch(e) {\n      console.error(ERROR_MESSAGE)\n    }\n  }, [storage])\n\n  return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}