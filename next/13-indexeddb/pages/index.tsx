import Head from 'next/head';
import { Inter } from '@next/font/google';
import styles from '@/styles/Home.module.css';
import { MouseEvent, useEffect, useRef, useState } from 'react';
import { v4 as uuidv4 } from 'uuid';

import { openDB, IDBPDatabase } from 'idb';

interface ITodo {
  id: string;
  content: string;
  completed: boolean;
}

export default function Home() {
  const [todos, setTodos] = useState<ITodo[]>([]);
  const [inputValue, setInputValue] = useState('');
  const [todosDB, setTodosDB] = useState<IDBPDatabase | null>(null);

  useEffect(() => {
    async function openDataBase() {
      const db = await openDB('todos', 1, {
        upgrade(db, oldVersion) {
          if (oldVersion < 1) {
            db.createObjectStore('todo', { autoIncrement: true });
          }
        },
      });

      setTodosDB(() => db);

      const tx = db.transaction('todo', 'readwrite');

      const res = await tx.store.getAll();

      if (res.length === 0) {
        await tx.store.add([]);
      }

      const todosData = await tx.store.get(1);
      setTodos(() => todosData);
    }

    openDataBase();
  }, []);

  const updateTodosData = async (nextTodos: ITodo[]) => {
    if (todosDB === null) return;

    const tx = todosDB.transaction('todo', 'readwrite');
    await tx.store.put(nextTodos, 1);
  };

  const onClickButton = async (e: MouseEvent) => {
    e.preventDefault();
    if (inputValue.length === 0) return;

    try {
      const nextTodos = [
        ...todos,
        {
          id: uuidv4(),
          content: inputValue,
          completed: false,
        },
      ];

      await updateTodosData(nextTodos);

      setTodos(() => nextTodos);

      setInputValue(() => '');
    } catch (e) {
      // eslint-disable-next-line
      console.error(e);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles['todo-page']}>
        <form className={styles.form}>
          <label htmlFor="input" className={styles.label}>
            <div className={styles['todo__title']}>할 일 입력하기</div>
            <input
              type="text"
              className={styles['todo__input']}
              id="input"
              onChange={(e) => setInputValue(e.target.value)}
              value={inputValue}
            />
          </label>

          <button type="submit" className={styles['todo__button']} onClick={onClickButton}>
            CLICK
          </button>
        </form>

        <ul className={styles['todo-list']}>
          {todos.map((todo) => (
            <li className={styles['todo-list__item']} key={todo.id}>
              {todo.content}
            </li>
          ))}
        </ul>
      </main>
    </>
  );
}
