import Head from 'next/head';
import { Noto_Sans_KR } from 'next/font/google';
import React from 'react';
import { v4 as uuidv4 } from 'uuid';

import { TodoInput } from '#/components/Todo/Input/TodoInput';
import { TodoForm } from '#/components/Todo/Form/TodoForm';
import { SubmitButton } from '#/components/Todo/Form/SubmitButton';
import { TodoList } from '#/components/Todo/List/TodoList';
import { TodoCard } from '#/components/Todo/Card/TodoCard';

const inter = Noto_Sans_KR({ weight: ['400', '700'], subsets: ['latin'] });
const createTodoDTO = ({ title }) => {
  return {
    id: uuidv4(),
    title,
    description: "",
    date: new Date()
  }
}

const getInitialTodoState = (dto) => {
  return {
    ...dto,
    isEditable: false
  }
}

export default function Home() {
  const inputRef = React.useRef(null);
  
  const [todos, setTodos] = React.useState([]);
  const [inputValue, setInputValue] = React.useState("");

  const handleChangeInput = (e) => {
    setInputValue(e.target.value);
  }

  const initializeInput = () => {
    setInputValue("");

    inputRef.current.value = "";
  }

  const onSubmit = (e) => {
    if (inputValue === "") return;

    e.preventDefault();

    const dto = createTodoDTO({ title: inputRef.current.value });

    setTodos(state => [
      ...state,
      getInitialTodoState(dto)
    ]);

    initializeInput();
  }

  const handleRemoveTodo = (id) => () => {
    setTodos(state => state.filter(todo => todo.id !== id))
  }

  const handlePutTodo = (id) => ({ title, description }) => {
    setTodos(state => state.map(todo => todo.id === id ? {
      ...state,
      title,
      description
    } : state))
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={`${inter.className}`}>
        <TodoForm onSubmit={initializeInput}>
          <TodoInput ref={inputRef} id="todo-input" onChange={handleChangeInput} />

          <SubmitButton onSubmit={onSubmit}>할 일 입력</SubmitButton>
        </TodoForm>

        <TodoList margin="20px 0 0 0">
          {todos.map( (todo) => (
            <TodoCard
              key={todo.id} 
              title={todo.title} 
              description={todo.description === "" ? '내용이 없어요 🙇🏻‍♂️' : todo.description} 
              onRemove={handleRemoveTodo(todo.id)}
              onEdit={handlePutTodo(todo.id)}
            />
          ))}
        </TodoList>
      </main>
    </>
  );
}
